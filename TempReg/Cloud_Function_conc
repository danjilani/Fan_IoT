import base64

archive = []

def hello_pubsub(event, context):
    """Triggered from a message on a Cloud Pub/Sub topic.
    Args:
         event (dict): Event payload.
         context (google.cloud.functions.Context): Metadata for the event.
    """
    message = base64.b64decode(event['data']).decode('ascii')

    attr = event['attributes']
    project_id = attr['projectId']
    registry_id = attr['deviceRegistryId']
    device_id = attr['deviceId']
    region = attr['deviceRegistryLocation']

    import json
    from google.cloud import iot_v1
    client = iot_v1.DeviceManagerClient()

    temp = json.loads(message)
    device_path = client.device_path(project_id, region, registry_id, device_id)


    if (temp[9] < 0):

      config = json.dumps({"fan_on": 0}).encode('ascii')
      client.send_command_to_device(request={"name": device_path, "binary_data": config})    

    if (temp[9] > 10):

      config = json.dumps({"fan_on": 1}).encode('ascii')
      client.send_command_to_device(request={"name": device_path, "binary_data": config})   

    global archive

    archive.extend(temp)
    if(len(archive) >= 30):
      '''from google.cloud import pubsub_v1
      publisher = pubsub_v1.PublisherClient()  
      topic = publisher.topic_path(project_id, 'History')'''

      hist = json.dumps(archive).encode('ascii')
      #response = publisher.publish(topic, hist)

      client.send_command_to_device(request={"name": device_path, "binary_data": hist}) 

      archive = []
